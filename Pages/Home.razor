@page "/"
@using Models;
@inject Blazored.LocalStorage.ISyncLocalStorageService localStorage

<h1>Ingreso de Animales</h1>

<EditForm Model="@ave" OnValidSubmit="@GuardarAve">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <h2>Aves:</h2>
    <div class="container text-center">
        <div class="row mt-3">
            <div class="col-6">
                <p>
                    <label for="identifier" class="form-label">Nombre: </label>
                    <InputText id="identifier" class="form-control" @bind-Value="ave.nombre" />
                    <ValidationMessage For="() => ave.nombre" />
                </p>

                <p>
                    <label for="identifier" class="form-label">Tipo de Alimentacion: </label>
                    <InputText id="identifier" class="form-control" @bind-Value="ave.tipoAlimentacion" />
                    <ValidationMessage For="() => ave.tipoAlimentacion" />
                </p>

                <p>
                    <label for="identifier" class="form-label">Especie: </label>
                    <InputText id="identifier" class="form-control" @bind-Value="ave.especie" />
                    <ValidationMessage For="() => ave.especie" />
                </p>
            </div>

            <div class="col-6">
                <p>
                    <label for="identifier" class="form-label">Periodo de incubación: </label>
                    <InputText id="identifier" class="form-control" @bind-Value="ave.periodoIncubacion" />
                    <ValidationMessage For="() => ave.periodoIncubacion" />
                </p>

                <p>
                    <label for="identifier" class="form-label">Tiempo maximo de vida: </label>
                    <InputText id="identifier" class="form-control" @bind-Value="ave.tiempoVida" />
                    <ValidationMessage For="() => ave.tiempoVida" />
                </p>

                <p>
                    <label for="classification">Vuela: </label>
                    <InputSelect id="classification" class="form-select" @bind-Value="ave.vuela">
                        <option value="">Seleccionar...</option>
                        <option value="Si">Si</option>
                        <option value="No">No</option>
                    </InputSelect>
                    <ValidationMessage For="() => ave.vuela" />
                </p>
            </div>

        </div>

        <div class="col">
            
        </div>

    </div>
    <p>
        <div class="row text-center mt-3">
            <div class="col">
                <button class="btn btn-secondary" type="submit">Agregar</button>
            </div>
        </div>
    </p>
</EditForm>

<EditForm Model="@serpiente" OnValidSubmit="@GuardarSerpiente">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <h2>Serpientes:</h2>
    <div class="container text-center">
        <div class="row mt-3">
            <div class="col">
                <p>
                    <label for="identifier" class="form-label">Nombre: </label>
                    <InputText id="identifier" class="form-control" @bind-Value="serpiente.nombre" />
                    <ValidationMessage For="() => serpiente.nombre" />
                </p>

                <p>
                    <label for="identifier" class="form-label">Tipo de Alimentacion: </label>
                    <InputText id="identifier" class="form-control" @bind-Value="serpiente.tipoAlimentacion" />
                    <ValidationMessage For="() => serpiente.tipoAlimentacion" />
                </p>

                <p>
                    <label for="identifier" class="form-label">Especie: </label>
                    <InputText id="identifier" class="form-control" @bind-Value="serpiente.especie" />
                    <ValidationMessage For="() => serpiente.especie" />
                </p>

                
            </div>

            <div class="col-6">
                <p>
                    <label for="identifier" class="form-label">Tiempo maximo de vida: </label>
                    <InputText id="identifier" class="form-control" @bind-Value="serpiente.tiempoVida" />
                    <ValidationMessage For="() => serpiente.tiempoVida" />
                </p>

                <p>
                    <label for="identifier" class="form-label">Longitud máxima: </label>
                    <InputText id="identifier" class="form-control" @bind-Value="serpiente.longitud" />
                    <ValidationMessage For="() => serpiente.longitud" />
                </p>

                <p>
                    <label for="classification">Vuela: </label>
                    <InputSelect id="classification" class="form-select" @bind-Value="serpiente.venenosa">
                        <option value="">Seleccionar...</option>
                        <option value="Si">Si</option>
                        <option value="No">No</option>
                    </InputSelect>
                    <ValidationMessage For="() => serpiente.venenosa" />
                </p>
            </div>
        </div>

    </div>
    <p>
        <div class="row text-center mt-3">
            <div class="col">
                <button class="btn btn-secondary" type="submit">Agregar</button>
            </div>
        </div>
    </p>
</EditForm>

@code {
    private Aves ave = new Aves();
    private List<Aves> aves = new List<Aves>();

    private Reptiles serpiente = new Reptiles();
    private List<Reptiles> serpientes = new List<Reptiles>();

    private void GuardarAve()
    {
        // Save the data into the list
        aves.Add(ave);
        // Guardar la lista de starships en LocalStorage como JSON
        localStorage.SetItem("aves", aves);
    }

    private void GuardarSerpiente()
    {
        // Save the data into the list
        serpientes.Add(serpiente);
        // Guardar la lista de starships en LocalStorage como JSON
        localStorage.SetItem("serpientes", serpientes);
    }

    protected override async Task OnInitializedAsync()
    {
        //Recuperar y validar datos
        var savedAves = localStorage.GetItem<List<Aves>>("aves");
        if (savedAves != null)
        {
            aves = savedAves;
        }

        var savedSerpientes = localStorage.GetItem<List<Reptiles>>("serpientes");
        if (savedSerpientes != null)
        {
            serpientes = savedSerpientes;
        }
    }
}
